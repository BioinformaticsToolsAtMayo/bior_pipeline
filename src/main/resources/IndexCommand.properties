# GENERAL PROPERTIES FILE GUIDELINES
#	1.	separate lines must have "\" at the end to enable multi-line properties 
#	2.	\, tab, form feed, newline, and carriage return are written as \\, \t, \f \n, and \r, respectively 
#	3.	All lines will be wrapped automatically.  Start a line with <NOWRAP> to disable this. 

# DESCRIPTION:	short description of the command
# REQUIRED:		yes
# NOTES:
short.description=Creates an index from a given catalog

# DESCRIPTION:	full description of the command
# REQUIRED:		yes
# NOTES:
long.description=Creates a key/filePosition index in an H2 database for a given catalog.  \
The catalog is a bgzip file that contains a JSON string.  \
The index key can be based on either a column, or a column/JsonPath pair.  \
The output is an H2 database with a table called 'Indexer' that contains a Key/FilePosition pair, \
where the FilePosition is a location within the catalog bgzip file.
\n\

# DESCRIPTION:	Definition of an example.  There can be zero or more.
# REQUIRED:		no
# NOTES:		property name must start with "example." prefix
example.json=\
This is a basic example of creating an index based on a key contained within the catalog's JSON structure.  \
Here, the bior_index command creates an index on the HGNC id within the catalog's JSON column.\n\
\n\
bior_index  /data4/bsi/refdata-new/catalogs/v1/NCBIGene/GRCh37_p10/genes.tsv.bgz  \
/data4/bsi/refdata-new/catalogs/v1/NCBIGene/GRCh37_p10/index/genes.HGNC.idx.h2.db  -c 4  -p HGNC  -i true \n\
\n\


# DESCRIPTION:  Definition of a command argument.  There can be zero or more.
# REQUIRED:     yes
# NOTES:        property name must start with "arg." prefix
#               To keep arguments in order, use arg.1.name  arg.2.name, ...
#               the order of how these properties are defined mirrors the order on the command line 
arg.1.catalogBgzipFile=\
{\
  "name":"CATALOG_BGZIP_FILE",\
  "description":"The catalog file (bgzip format) that will be indexed."\
}

arg.2.indexFileOut=\
{\
  "name":"INDEX_FILE_OUT",\
  "description":"The index file that will be created as key-filePosition pairs from keys found within the catalog file.  If the key is not found on a row in the catalog, it will not be indexed."\
}

# DESCRIPTION:	Definition of a command option.  There can be zero or more.
# REQUIRED:		yes
# NOTES:		property name must start with "flag." prefix
flag.columnContainingKey=\
{							\
  "opt": "c",				\
  "longOpt": "column",	\
  "description": "The column containg the key.  Default is -1 which will use the last column.",	\
  "required": false,		\
  "numArgs": 1				\
}

flag.jsonPath=\
{							\
  "opt": "p",				\
  "longOpt": "pathJson",		\
  "description": "A JSON path that will be used to find and extract data from JSON.  Paths are case sensitive.",	\
  "required": false,			\
  "numArgs": 1,				\
  "argName": "JSON path"	\
}
