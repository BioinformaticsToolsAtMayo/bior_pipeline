# GENERAL PROPERTIES FILE GUIDELINES
#	1.	separate lines must have "\" at the end to enable multi-line properties 
#	2.	\, tab, form feed, newline, and carriage return are written as \\, \t, \f \n, and \r, respectively 
#	3.	All lines will be wrapped automatically.  Start a line with <NOWRAP> to disable this. 

# DESCRIPTION:	short description of the command
# REQUIRED:		yes
# NOTES:
short.description=finds overlapping features in a Catalog

# DESCRIPTION:	full description of the command
# REQUIRED:		yes
# NOTES:
long.description=\
For each input feature streamed into bior_overlap, the specified Catalog is queried for overlapping features.  \
An overlapping feature is defined as:\n\
\n\
\t1. matching landmark (e.g. chromosome)\n\
\t2. input feature and overlapping feature share AT LEAST one base pair\n\
\n\
The command reads tabular data from STDIN and assumes the last column is a JSON structure that represents the input features.  \
Overlap features are streamed to STDOUT as a new JSON structure in an additional column.  \
For input features that have 0 overlapping features, an empty JSON structure (e.g. {}) is written. 

# DESCRIPTION:	Definition of an example.  There can be zero or more.
# REQUIRED:		no
# NOTES:		property name must start with "example." prefix
example.1=\
This is an example of finding what genes overlap a SNP.  \
The input features are SNPs that originate from a VCF file named example.vcf.   \
The output features are genes that come from a Catalog built from NCBI gene data.  \
A UNIX environment variable $NCBI_GENE is created to help with readability that points to the NCBI Gene catalog.  \
The bior_overlap command will take the input features produced by bior_vcf_to_json and find overlapping features in NCBI Gene.  \
The overlapping features are then output to STDOUT as an additional column.\n\
\n\
cat example.vcf\n\
\n\
\t##fileformat=VCFv4.1\n\
\t#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO\n\
\t17	41251803	rs56187033	A	G	.	.	NONE\n\
\n\
export NCBI_GENE=$BIOR_CATALOG/NCBIGene/GRCh37_p10/genes.tsv.bgz\n\
\n\
cat example.vcf | bior_vcf_to_json | bior_overlap -d $NCBI_GENE | bior_pretty_print\n\
\n\
\tCOLUMN NAME     COLUMN VALUE\n\
\t-----------     ------------\n\
\tCHROM           17\n\
\tPOS             41251803\n\
\tID              rs56187033\n\
\tREF             A\n\
\tALT             G\n\
\tQUAL            .\n\
\tFILTER          .\n\
\tINFO            NONE\n\
\tVCF2VariantPipe {\n\
\t                  "CHROM": "17",\n\
\t                  "POS": "41251803",\n\
\t                  "ID": "rs56187033",\n\
\t                  "REF": "A",\n\
\t                  "ALT": "G",\n\
\t                  "QUAL": ".",\n\
\t                  "FILTER": ".",\n\
\t                  "INFO": {\n\
\t                    "NONE": true\n\
\t                  }\n\
\t                }\n\
\tOverlapPipe     {\n\
\t                  "gene": "BRCA1",\n\
\t                  "gene_synonym": "BRCAI; BRCC1; BROVCA1; IRIS; PNCA4; PPP1R53; PSCP; RNF53",\n\
\t                  "note": "breast cancer 1, early onset",\n\
\t                  "GeneID": "672",\n\
\t                  "HGNC": "1100",\n\
\t                  "HPRD": "00218",\n\
\t                  "MIM": "113705"\n\
\t                }\n\


# DESCRIPTION:	Definition of a command option.  There can be zero or more.
# REQUIRED:		yes
# NOTES:		property name must start with "flag." prefix
flag.database=\
{							\
  "opt": "d",				\
  "longOpt": "database",	\
  "description": "The Catalog file (tabix) to do the overlap search.",	\
  "required": true,		\
  "numArgs": 1,				\
  "argName": "path"\
}