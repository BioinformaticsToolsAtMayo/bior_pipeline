# GENERAL PROPERTIES FILE GUIDELINES
#	1.	separate lines must have "\" at the end to enable multi-line properties 
#	2.	\, tab, form feed, newline, and carriage return are written as \\, \t, \f \n, and \r, respectively 
#	3.	All lines will be wrapped automatically.  Start a line with <NOWRAP> to disable this. 

command.class=edu.mayo.bior.cli.cmd.LookupCommand

command.name=bior_lookup

short.description=Searches for a given key in a catalog

long.description=The bior_lookup command takes a value from a specific column from data piped in on STDIN, \
finds the line within the target catalog containing that value (matching a JSON key in the catalog), \
and appends the matching JSON data from the catalog as an additional row, \
which is then piped again to STDOUT.\n\
\n\

example.rsId=\
Given a file with rsIDs:\n \
e.g. \n \
cat rsid.txt \n \
rs1060915 \n \
rs147856441 \n \
rs147856441 \n \
rs149071245 \n \
rs149071245 \n\n \
To find these rsIDs in a dbSNP catalog ($BIOR_CATALOG/dbSNP/137/00-All_GRCh37.tsv.bgz) \
use the lookup command as follows: \n \
cat rsid.txt | bior_lookup  -p ID  -d $BIOR_CATALOG/dbSNP/137/00-All_GRCh37.tsv.bgz  \
 | bior_pretty_print \n \
The resulting rows will look something like: \n\n \
\t1\t  ID\t           rs1060915 \n\
\t2\t  LookupPipe\t   { \n\
\t\t                  "CHROM": "17", \n\
\t\t                  ... \n\
\t\t                  "_id": "rs1060915", \n\
\t\t                  "_type": "variant", \n\
\t\t                  "_landmark": "17", \n\
\t\t                  "_refAllele": "A", \n\
\t\t                  "_altAlleles": [ \n\
\t\t                    "G" \n\
\t\t                  ], \n\
\t\t                  "_minBP": 41234470, \n\
\t\t                  "_maxBP": 41234470 \n\
\t\t                } \n\
This can then be used as the input to bior_overlap and other commands to get additional annotation. \n\

flag.catalogFile=\
{							\
  "opt": "d",				\
  "longOpt": "database",	\
  "argName": "DATABASE", \
  "description": "The catalog file (bgzip format) containing the JSON data to lookup.",	\
  "required": true,			\
  "numArgs": 1				\
}

flag.indexKey=\
{							\
  "opt": "p",				\
  "longOpt": "path",		\
  "argName": "PATH",    \
  "description": "The JSON path used in the index to match locations within the catalog where the same JSON path occurs \
    Paths are case sensitive.", \
  "required": true,			\
  "numArgs": 1				\
}

flag.indexfile=\
{							\
  "opt": "i",				\
  "longOpt": "index",	\
  "argName": "INDEX", \
  "description": "Specifies the path to a custom index file built by a user with the bior_index command.  \
    If not specified, bior_lookup will use the pre-built indexes in the catalog's index subfolder.", \
  "required": false,		\
  "numArgs": 1				\
}

flag.column=\
{							\
  "opt": "c",				\
  "longOpt": "column",		\
  "argName": "COLUMN", \
  "description": "A non-zero integer value.  Given History[] is an array(list) of the tab delimited values in a single row of input, \
     values [1,2,3,...] index columns starting from the left of the History array, values [-1,-2,-3,...] \
     index columns starting from the right.  \
     If not specified, the rightmost column will be treated as the id/string that will be looked up in the catalog.",	\
  "required": false,		\
  "numArgs": 1				\
}

flag.sensitiveToCase=\
{                           \
  "opt": "s",               \
  "longOpt": "sensitiveToCase",      \
  "description": "Specifies if the lookup is case sensitive.  If this flag is set, the key must match EXACTLY the key referenced in the catalog.", \
  "required": false,        \
  "numArgs": 0              \
}
