# GENERAL PROPERTIES FILE GUIDELINES
#	1.	separate lines must have "\" at the end to enable multi-line properties 
#	2.	\, tab, form feed, newline, and carriage return are written as \\, \t, \f \n, and \r, respectively 
#	3.	All lines will be wrapped automatically.  Start a line with <NOWRAP> to disable this. 

command.class=edu.mayo.bior.cli.cmd.CompressCommand

command.name=bior_compress

short.description=compresses multiple rows into one

long.description=\
Takes arbitrary table data in Tab Separated Value (TSV) format from STDIN and compresses multiple "similar" rows into 1 row that is output to STDOUT.  \
Rows are defined to be "similar" if all column values are identical except for columns specified to be compressed.  \
Columns to be compressed are specified with the COLUMNS argument.\n\
\n\
The default behavior of compressing multiple row values into a single value is that only unique values are retained.  \
To override the default behavior, the -a,--align option can be used so that ALL values are retained so that data between multiple compressed columns can be correlated.

arg.columns=\
{\
  "name": "COLUMNS",                                             \
  "description": "Specifies columns to be compressed.  Specification of columns is done via a UNIX cut style field LIST.  \
A LIST is made up of one range, or many ranges separated by commas.  \
Each range is one of:\n\
\n\
N     Nth field, counted from 1\n\
N-    from Nth field, to end of line\n\
N-M   from Nth to Mth (included) field\n\
-M    from first to Mth (included) field\n\
\n\
NOTE: Fields are 1-based and ordered 1, 2, 3, 4, 5, 6, ... where Field 1 is the first item.\n\
"\
}

flag.separator=\
{							\
  "opt": "s",				\
  "longOpt": "separator",		\
  "description": "Separator used to delimit multiple row values in a compressed column.  Default is the | character.",	\
  "required": false,			\
  "numArgs": 1,				\
  "argName": "STRING"	\
}

flag.escape=\
{							\
  "opt": "e",				\
  "longOpt": "escape",		\
  "description": "Escape occurrences of a separator in a compressed column by replacing it with the specified value.  Default is \\\\|.",	\
  "required": false,			\
  "numArgs": 1,				\
  "argName": "STRING"	\
}

flag.reverse=\
{							\
  "opt": "r",				\
  "longOpt": "reverse",		\
  "description": "Reverses the field ordering.  Fields are ordered ..., 6, 5, 4, 3, 2, 1 where Field 1 is the last item.  The behavior of a range (e.g. N-, N-M, -M) remains unchanged.",	\
  "required": false,			\
  "numArgs": 0				\
}

flag.align=\
{							\
  "opt": "a",				\
  "longOpt": "align",		\
  "description": "For each compressed row, the number of delimited values per compressed column will be identical across ALL compressed columns.  This is useful for correlating values from multiple different compressed columns.",	\
  "required": false,			\
  "numArgs": 0				\
}

example.1=\
This example shows how the bior_compress command executes on an example flat file data.txt.  \
Notice how rows 1-4 are compressed into a single row because the non-compress columns #COL1 and #COL2 are identical.  \
The same data.txt file is compressed using the --align option to illustrate the difference in the compressed output.\n\
\n\
cat data.txt\n\
\t#COL1     COL2     COL3     COL4\n\
\t11111     AAAA     9        33.3\n\
\t11111     AAAA     8        35.1\n\
\t11111     AAAA     8        .\n\
\t11111     AAAA     8        34.3\n\
\t22222     BBBB     2        32.7\n\
\t22222     CCCC     5        30.5\n\
\t33333     DDDD     3        34.3\n\
\n\
cat data.txt | bior_compress 3,4\n\
\t#COL1     COL2     COL3     COL4\n\
\t11111     AAAA     9|8      33.3|35.1|34.3\n\
\t22222     BBBB     2        32.7\n\
\t22222     CCCC     5        30.5\n\
\t33333     DDDD     3        34.3\n\
\n\
cat data.txt | bior_compress --align 3,4\n\
\t#COL1     COL2     COL3     COL4\n\
\t11111     AAAA     9|8|8|8  33.3|35.1|.|34.3\n\
\t22222     BBBB     2        32.7\n\
\t22222     CCCC     5        30.5\n\
\t33333     DDDD     3        34.3