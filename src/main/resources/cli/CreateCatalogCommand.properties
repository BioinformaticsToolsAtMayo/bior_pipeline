# GENERAL PROPERTIES FILE GUIDELINES
#	1.	separate lines must have "\" at the end to enable multi-line properties 
#	2.	\, tab, form feed, newline, and carriage return are written as \\, \t, \f \n, and \r, respectively 
#	3.	All lines will be wrapped automatically.  Start a line with <NOWRAP> to disable this. 

command.class=edu.mayo.bior.cli.cmd.CreateCatalogCommand

command.name=bior_create_catalog

short.description=Shorthand command for creating a catalog

long.description=In BioR, catalogs can easily be created using the programming language of your choice  \
combined with bgzip followed by tabix.  But these methods while flexible, are often confusing to users. \
bior_create_catalog is a simple utility function that wraps these commands in a simple easy to use script. \
\n\

example.json=\
To use bior_create_catalog, you need an input file in the TJSON format (easily constructed using other BioR commands),  \
the column of the JSON you want to convert into the catalog, and an output file.  Example Usage: \n\
\n\
bior_create_catalog -c -1 -i input.tjson  -o output.tsv \n\

flag.catalogBgzipFile=\
{\
  "opt": "c", \
  "longOpt": "column", \
  "argName":"COLUMN", \
  "description":"The JSON position in the input that the catalog will be made from (default -1).", \
  "required": false,         \
  "numArgs": 1             \
}

flag.inputFile=\
{							\
  "opt": "i",				\
  "longOpt": "input",		\
  "argName": "INPUT",   \
  "description": "The input file to construct the catalog from.", \
  "required": true,			\
  "numArgs": 1				\
}

flag.outputFile=\
{                           \
  "opt": "o",               \
  "longOpt": "output",  \
  "argName": "OUTPUT", \
  "description": "The output file prefix for the catalog that will be created (.tsv.bgz will be appended).", \
  "required": true,        \
  "numArgs": 1              \
}
